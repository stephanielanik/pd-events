name: Build Events Feed
on:
  schedule: [{cron: "*/30 * * * *"}]  # every 30 min
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - run: npm i node-fetch@3
      - name: Generate events.json
        env:
          GCAL_API_KEY: ${{ secrets.GCAL_API_KEY }}
          CAL_ID: your_calendar_id@group.calendar.google.com
        run: |
          node - <<'JS'
          import fs from 'node:fs/promises';
          import fetch from 'node-fetch';

          const key  = process.env.GCAL_API_KEY;
          const cal  = encodeURIComponent(process.env.CAL_ID);
          const now  = new Date().toISOString();
          const url  = `https://www.googleapis.com/calendar/v3/calendars/${cal}/events?singleEvents=true&orderBy=startTime&timeMin=${now}&maxResults=50&key=${key}`;

          const r = await fetch(url);
          if (!r.ok) throw new Error(await r.text());
          const data = await r.json();

          const events = (data.items || []).map(ev => {
            const start = ev.start.dateTime || (ev.start.date + 'T00:00:00');
            const end   = ev.end.dateTime   || (ev.end.date   + 'T23:59:59');
            return {
              id: ev.id,
              title: ev.summary || 'Untitled',
              start, end,
              allDay: !!ev.start.date,
              location: ev.location || '',
              description: ev.description || ''
            };
          });

          await fs.mkdir('public', { recursive:true });
          await fs.writeFile('public/events.json', JSON.stringify(events, null, 2));
          console.log('Wrote public/events.json with', events.length, 'events');
          JS
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with: { path: public }
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions: { pages: write, id-token: write }
    environment: { name: github-pages, url: ${{ steps.deployment.outputs.page_url }} }
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
